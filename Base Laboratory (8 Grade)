from datetime import date

class Student:
    def __init__(self, first_name, last_name, email, enrollment_date, date_of_birth):
        self.first_name = first_name
        self.last_name = last_name
        self.email = email
        self.enrollment_date = enrollment_date
        self.date_of_birth = date_of_birth

class StudyField:
    MECHANICAL_ENGINEERING = 1
    SOFTWARE_ENGINEERING = 2
    FOOD_TECHNOLOGY = 3
    URBANISM_ARCHITECTURE = 4
    VETERINARY_MEDICINE = 5

class Faculty:
    def __init__(self, name, abbreviation, study_field):
        self.name = name
        self.abbreviation = abbreviation
        self.students = []
        self.study_field = study_field

    def add_student(self, student):
        self.students.append(student)

    def remove_student(self, student):
        self.students.remove(student)

    def list_students(self):
        return self.students

class University:
    def __init__(self):
        self.faculties = []

    def create_faculty(self, name, abbreviation, study_field):
        faculty = Faculty(name, abbreviation, study_field)
        self.faculties.append(faculty)
        return faculty

    def find_faculty_by_student_email(self, email):
        for faculty in self.faculties:
            for student in faculty.students:
                if student.email == email:
                    return faculty
        return None

    def display_all_faculties(self):
        print("University Faculties:")
        for faculty in self.faculties:
            print(f"{faculty.name} ({faculty.abbreviation}) - {faculty.study_field}")

    def display_faculties_by_field(self, study_field):
        print(f"Faculties in {study_field}:")
        for faculty in self.faculties:
            if faculty.study_field == study_field:
                print(f"{faculty.name} ({faculty.abbreviation})")

def main():
    tum = University()
    while True:
        print("\nTUM Student Management System")
        print("1. Faculty Operations")
        print("2. General Operations")
        print("3. Exit")
        choice = input("Enter your choice: ")

        if choice == "1":
            print("\nFaculty Operations:")
            print("1. Create and assign a student to a faculty")
            print("2. Graduate a student from a faculty")
            print("3. Display current enrolled students")
            print("4. Display graduates")
            print("5. Check if a student belongs to a faculty")
            sub_choice = input("Enter your choice: ")

            if sub_choice == "1":
                print("\nCreating a student:")
                first_name = input("Enter first name: ")
                last_name = input("Enter last name: ")
                email = input("Enter email: ")
                enrollment_date = date.today()
                date_of_birth = input("Enter date of birth (YYYY-MM-DD): ")
                student = Student(first_name, last_name, email, enrollment_date, date_of_birth)

                tum.display_all_faculties()
                faculty_index = int(input("Enter the index of the faculty to assign the student: "))
                tum.faculties[faculty_index].add_student(student)
                print("Student assigned successfully.")

            # Implement other faculty operations similarly

        elif choice == "2":
            print("\nGeneral Operations:")
            print("1. Create a new faculty")
            print("2. Search what faculty a student belongs to by email")
            print("3. Display University faculties")
            print("4. Display all faculties belonging to a field")
            sub_choice = input("Enter your choice: ")

            if sub_choice == "1":
                print("\nCreating a new faculty:")
                name = input("Enter faculty name: ")
                abbreviation = input("Enter faculty abbreviation: ")
                print("Select study field:")
                for field in vars(StudyField):
                    print(f"{field}: {getattr(StudyField, field)}")
                study_field = int(input("Enter study field number: "))
                tum.create_faculty(name, abbreviation, study_field)
                print("Faculty created successfully.")

            elif sub_choice == "2":
                email = input("Enter student email: ")
                faculty = tum.find_faculty_by_student_email(email)
                if faculty:
                    print(f"The student belongs to {faculty.name} faculty.")
                else:
                    print("Student not found or not enrolled in any faculty.")

            elif sub_choice == "3":
                tum.display_all_faculties()

            elif sub_choice == "4":
                print("Select study field to display faculties:")
                for field in vars(StudyField):
                    print(f"{field}: {getattr(StudyField, field)}")
                study_field = int(input("Enter study field number: "))
                tum.display_faculties_by_field(study_field)

        elif choice == "3":
            print("Exiting the program. Goodbye!")
            break

        else:
            print("Invalid choice. Please try again.")

if __name__ == "__main__":
    main()
